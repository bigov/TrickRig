#include <iostream>

///
/// Определение координат проекции на плоскость точки в 3D пространстве
///
/// p - точка на плоскости (координаты камеры в пространстве)
/// n - единичный вектор направления камеры
/// v - точка, для которой нужны координаты проекции на плоскость вида камеры
///
void dot_cross(double *r, double *p, double *n, double *v)
{
  double q = (v[0] * n[0] + v[1] * n[1] + v[2] * n[2] - n[0] * p[0]
    - n[1] * p[1] - n[2] * p[2]) / (n[2] * n[2] + n[1] * n[1] + n[0] * n[0]);
  r[0] = v[0] - q * n[0];
  r[1] = v[1] - q * n[1];
  r[2] = v[2] - q * n[2];
  return;
}

int main(int, char**)
{
    //плоскость камеры
  double P[3] = { 0.49, 1.81, 2.48 };  // координаты камеры
  double n[3] = {-0.16,-0.58,-0.80 };  // нормаль направления камеры

  // точка меша
  double V[3] = { -0.024, -0.061, -0.079 };  // исследуемая точка
  double r[3];                               // результат
  dot_cross(r, P, n, V);

  char buf[256];
  std::sprintf(buf,"%+4.2f, %+4.2f, %+4.2f\n", r[0], r[1], r[2]);
  std::cout << "\n" << buf;

  return 0;
}
