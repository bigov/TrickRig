	

2017.11.25
    Для сборки в MSYS2 использовать линк "c:/msys2/mingw64" => "c:/usr".
    Сборка под MSYS2 показала что в этой системе нет модуля freetype2
    для статической сборки (без зависимостей от mingw32). Если и дальше
    использовать msys2, то придется выносить freetype2 в каталог сборки. А это,
    вероятнее всего, потащит за собой и часть дополнительных библиотек.


Проверка производительности (core 3.3)
======================================

Тестируемый GPU :
  L-I : - Intel Интегрированный i915, Linux
  MS-N: - Nvidia GeForce GTX 780

   массив VAO+VBO 500x500 кубиков

------------------------------------------------------------------------------
 способ размещения данных графической памяти      L-I       MS-N
------------------------------------------------------------------------------
 массив VAO+VBO 500x500 кубиков (9 млн точек)    24-26      520
 VAO+VBO 500x500 кубиков + индексный массив      36-40      750-830   34,7Mb
 раздельные массивы для каждого атрибута         38-42      770-840
 раздельные массивы, GLuint текстура                        780-845   32,7Mb
 раздельные массивы, GLuint текстура, CullFace              820-845   32,7Mb
 координаты текстур в формате SHORT карта 255х255           780-844
 координаты текстур в формате float, карта 256х256          770-837
 геометрический шейдер (без отсечения невидимых граней)     302-305   36,9Mb
 геометрический шейдер (с отсечением)                       370-380   33,4Mb
------------------------------------------------------------------------------

version 0.3
	Первод алгоритма построения пространства с 3D кубов на прямоугольные поверхности
	Реализовать прямоугольники как entyties, c использованием координат точки origin
	для имитации эффекта Ambient occlusion (AO) на стыках элементов
	( используя gl_FragColor[3] и gl_FragCoord.x/gl_FragCoord.y в геометрическом шейдере.)

version 0.2
	Так как использование геометрических шейдеров для расчета вершин не добавило,
	а уменьшило быстродействие, то решено вернуться к конструированию элементов
	пространства в теле основной программы и передаче в VBO готовых наборов вершин.

version 0.1
	В этой версии   пространство строится из кубических элементов при помощи
	геометрического шейдера. В основной базе данных пространства для каждого
	элемента хранятся 3Д-коодинаты его центра, углы поворота и тип. Эти данные
	передаются сразу через VBO в геометрический шейдер, который строит элементы,
	добавляя восемь вершин, необходимых для отображения граней куба.

	Кроме того, сделана (черновая) попытка отбрасывать при помощи геометрического
	шейдера построение невидимых с текущего ракурса граней, и их отображение при
	смене позиции, когда они становятся видны. Фукционал только тестировался и
	был настроен недостаточно чисто.
